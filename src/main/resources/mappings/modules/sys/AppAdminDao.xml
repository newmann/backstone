<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beiyelin.shop.modules.sys.dao.AppAdminDao">
	

	<sql id="appAdminEntityColumns">
		a.id,
		a.login_name,
		a.password,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.create_by,
		a.create_date,
		a.update_by ,
		a.update_date,
		a.del_flag,
		a.org_id
	</sql>
	
    <sql id="appAdminColumns">
 		a.id,
		a.login_name,
		a.password,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.create_by,
		a.create_date,
		a.update_by,
		a.update_date,
		a.del_flag,
		a.org_id
    </sql>
    

	<!-- 根据编号获得系统管理员 -->
	<select id="get" resultType="AppAdmin">
		SELECT
			<include refid="appAdminColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM app_admin a
		WHERE a.id = #{id}
	</select>

    <!-- 获得系统管理员表的实体 -->
    <select id="getEntity" resultType="AppAdmin">
        SELECT
            <include refid="appAdminEntityColumns"/>
        FROM app_admin a
        WHERE a.id = #{id}
    </select>

	<!-- 根据登录名查询系统管理员 -->
	<select id="getByLoginName" resultType="AppAdmin" parameterType="AppAdmin">
		SELECT
			<include refid="appAdminColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM app_admin a
		WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

    <!-- 前台根据登录名查询系统管理员 -->
    <select id="getByLoginName2" resultType="AppAdmin" parameterType="AppAdmin">
        SELECT
        <include refid="appAdminEntityColumns"/>
        FROM app_admin a
        WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL}
    </select>

    <!-- 前台根据手机号查询系统管理员 -->
    <select id="getByMobile" resultType="AppAdmin" parameterType="AppAdmin">
        SELECT
          <include refid="appAdminEntityColumns"/>
        FROM app_admin a
        WHERE a.mobile = #{mobile} AND a.del_flag = #{DEL_FLAG_NORMAL}
    </select>
	
	<!-- 分页查询系统管理员信息 -->
	<select id="findList" resultType="AppAdmin">
		SELECT
			<include refid="appAdminColumns"/>
		FROM app_admin a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="loginName != null and loginName != ''">
			AND a.login_name like 
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.name
			</otherwise>
		</choose>
	</select>
	

	<!-- 查询全部系统管理员 -->
	<select id="findAllList" resultType="AppAdmin">
		SELECT
			<include refid="appAdminColumns"/>
		FROM app_admin a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.name
	</select>
	
	<!-- 查询全部系统管理员数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM app_admin a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>




	<!-- 插入系统管理员 -->
	<insert id="insert">
		INSERT INTO app_admin(
		id,
		login_name,
		password,
		name,
		email,
		phone,
		mobile,
		remarks,
		login_flag,
		create_by,
		create_date,
		update_by,
		update_date,
		del_flag,
		org_id
		) VALUES (
			#{id}, 
			#{loginName},
			#{password}, 
			#{name},
			#{email}, 
			#{phone}, 
			#{mobile}, 
			#{remarks},
			#{loginFlag},
			#{createBy},
			#{createDate}, 
			#{updateBy},
			#{updateDate}, 
			#{delFlag},
			#{orgId}
		)
	</insert>

	<!-- 完整更新系统管理员 -->
	<update id="update">
		UPDATE app_admin SET
		login_name = #{loginName},
		name = #{name},
		email = #{email},
		phone = #{phone},
		mobile = #{mobile},
		remarks = #{remarks},
		login_flag = #{loginFlag},
		create_by = #{createBy},
		create_date = #{createDate},
		update_by = #{updateBy},
		update_date = #{updateDate},
		del_flag = #{delFlag},
		org_id = #{orgId}
		WHERE id = #{id}
	</update>
	

	<!-- 更新系统管理员信息  -->
	<update id="updateAppAdminInfo">
		UPDATE app_admin SET
			login_name = #{loginName},
			name = #{name},
			email = #{email},
			phone = #{phone},
			mobile = #{mobile},
			update_by = #{updateByid},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<!-- 更新系统管理员密码 -->
	<update id="updatePasswordById">
		UPDATE app_admin SET
			password = #{password} 
		WHERE id = #{id}
	</update>
	
	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE app_admin SET
			login_ip = #{loginIp}, 
			login_date = #{loginDate}
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除系统管理员 -->
	<update id="delete">
		UPDATE app_admin SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


</mapper>